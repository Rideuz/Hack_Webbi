{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Keycloak from \"keycloak-js\";\nconst useAuth = () => {\n  _s();\n  const [isLogin, setLogin] = useState(false);\n  useEffect(() => {\n    const keycloak = new Keycloak({\n      url: \"http://localhost:8080\",\n      // URL Keycloak сервера\n      realm: \"myrealm\",\n      // Название твоего Realm\n      clientId: \"react-client\" // ID клиента\n    });\n    keycloak.init({\n      onLoad: \"login-required\"\n    }).then(res => setLogin(res));\n  }, []);\n  return isLogin;\n};\n_s(useAuth, \"gzENNUSsyx9i0kOmwTPVNqFYUvo=\");\nexport default useAuth;","map":{"version":3,"names":["React","useState","useEffect","Keycloak","useAuth","_s","isLogin","setLogin","keycloak","url","realm","clientId","init","onLoad","then","res"],"sources":["D:/hack/Hack_Webbi/web-bee-app/client/src/hooks/useAuth.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Keycloak from \"keycloak-js\";\r\n\r\nconst useAuth = () => {\r\n  const [isLogin, setLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const keycloak = new Keycloak({\r\n      url: \"http://localhost:8080\", // URL Keycloak сервера\r\n      realm: \"myrealm\", // Название твоего Realm\r\n      clientId: \"react-client\", // ID клиента\r\n    });\r\n    keycloak.init({ onLoad: \"login-required\" }).then((res) => setLogin(res));\r\n  }, []);\r\n\r\n  return isLogin;\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,aAAa;AAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAG,IAAIL,QAAQ,CAAC;MAC5BM,GAAG,EAAE,uBAAuB;MAAE;MAC9BC,KAAK,EAAE,SAAS;MAAE;MAClBC,QAAQ,EAAE,cAAc,CAAE;IAC5B,CAAC,CAAC;IACFH,QAAQ,CAACI,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAiB,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKR,QAAQ,CAACQ,GAAG,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,OAAO;AAChB,CAAC;AAACD,EAAA,CAbID,OAAO;AAeb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}