{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Desktop\\\\WebBee\\\\Hack_Webbi\\\\web-bee-app\\\\client\\\\src\\\\pages\\\\adminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = ({\n  keycloakInstance,\n  setToken\n}) => {\n  _s();\n  const handleLogout = async () => {\n    try {\n      await keycloakInstance.logout();\n    } catch (error) {\n      console.error(\"Ошибка при выходе:\", error);\n    }\n  };\n  useEffect(() => {\n    // Set up the periodic account check every minute\n    const checkInterval = setInterval(() => {\n      keycloakInstance.updateToken(60) // Refresh token if it will expire within the next 60 seconds\n      .then(refreshed => {\n        if (!refreshed) {\n          // If token is not refreshed, check if user is still logged in\n          keycloakInstance.loadUserInfo().then(userInfo => {\n            // If userInfo is not returned, consider user is logged out\n            if (!userInfo) handleLogout();\n          }).catch(() => handleLogout()); // If loadUserInfo fails, log out\n        } else {\n          setToken(keycloakInstance.token); // Update token in the state if refreshed\n        }\n      }).catch(() => handleLogout()); // Log out if updateToken fails\n    }, 10000); // Run every 60 seconds\n\n    return () => clearInterval(checkInterval); // Clear interval on component unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442, \\u0410\\u0434\\u043C\\u0438\\u043D!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/userPage\",\n      children: \"\\u041B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLogout(),\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AdminPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","keycloakInstance","setToken","_s","handleLogout","logout","error","console","checkInterval","setInterval","updateToken","then","refreshed","loadUserInfo","userInfo","catch","token","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/student/Desktop/WebBee/Hack_Webbi/web-bee-app/client/src/pages/adminPage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminPage = ({ keycloakInstance, setToken}) => {\r\n  const handleLogout = async () => {\r\n    try {\r\n      await keycloakInstance.logout();\r\n    } catch (error) {\r\n      console.error(\"Ошибка при выходе:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n          // Set up the periodic account check every minute\r\n          const checkInterval = setInterval(() => {\r\n            keycloakInstance.updateToken(60) // Refresh token if it will expire within the next 60 seconds\r\n              .then((refreshed) => {\r\n                if (!refreshed) {\r\n                  // If token is not refreshed, check if user is still logged in\r\n                  keycloakInstance.loadUserInfo()\r\n                    .then(userInfo => {\r\n                      // If userInfo is not returned, consider user is logged out\r\n                      if (!userInfo) handleLogout();\r\n                    })\r\n                    .catch(() => handleLogout()); // If loadUserInfo fails, log out\r\n                } else {\r\n                  setToken(keycloakInstance.token); // Update token in the state if refreshed\r\n                }\r\n              })\r\n              .catch(() => handleLogout()); // Log out if updateToken fails\r\n          }, 10000); // Run every 60 seconds\r\n\r\n          return () => clearInterval(checkInterval); // Clear interval on component unmount\r\n        }, []);\r\n  \r\n  return (\r\n    <>\r\n    <h1>Привет, Админ!</h1>\r\n        <Link to=\"/userPage\">Личный кабинет!</Link>\r\n      <button onClick={() => handleLogout()}>Выйти</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMH,gBAAgB,CAACI,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACR;IACA,MAAMe,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtCR,gBAAgB,CAACS,WAAW,CAAC,EAAE,CAAC,CAAC;MAAA,CAC9BC,IAAI,CAAEC,SAAS,IAAK;QACnB,IAAI,CAACA,SAAS,EAAE;UACd;UACAX,gBAAgB,CAACY,YAAY,CAAC,CAAC,CAC5BF,IAAI,CAACG,QAAQ,IAAI;YAChB;YACA,IAAI,CAACA,QAAQ,EAAEV,YAAY,CAAC,CAAC;UAC/B,CAAC,CAAC,CACDW,KAAK,CAAC,MAAMX,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,MAAM;UACLF,QAAQ,CAACD,gBAAgB,CAACe,KAAK,CAAC,CAAC,CAAC;QACpC;MACF,CAAC,CAAC,CACDD,KAAK,CAAC,MAAMX,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAMa,aAAa,CAACT,aAAa,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEZ,oBACEX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACArB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA,CAACF,IAAI;MAAC4B,EAAE,EAAC,WAAW;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7CzB,OAAA;MAAQ2B,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAAC,CAAE;MAAAc,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACrD,CAAC;AAEP,CAAC;AAACnB,EAAA,CAvCIH,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}